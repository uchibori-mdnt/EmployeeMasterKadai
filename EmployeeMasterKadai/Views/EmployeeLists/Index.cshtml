@model IEnumerable<EmployeeMasterKadai.Models.EmployeeList>
@using EmployeeMasterKadai.Common

@{
    ViewData["Title"] = "Index";
}

<!-- 追加モーダルを表示するボタン -->
<button type="button" class="btn btn-primary mb-3" id="openCreateModal">
    追加<i class="bi bi-person-add"></i>
</button>
<br>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RetirementFlag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RetirementDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RetirementFlag)
            </td>
            <td>
                @{
                    var retirementDayDateFormat = new DateFormat();
                    var formattedRetirementDay = retirementDayDateFormat.Format(item.RetirementDay, "yyyy年MM月dd日");
                }
                @formattedRetirementDay
            </td>
            <td>
                @{
                    var createdAtDateFormat = new DateFormat();
                    var formattedCreatedAtDate = createdAtDateFormat.Format(item.CreatedAt, "yyyy年MM月dd日 hh:mm");
                }
                @formattedCreatedAtDate
            </td>
            <td>
                @{
                    var updatedAtDateFormat = new DateFormat();
                    var formattedUpdatedAtDate = updatedAtDateFormat.Format(item.UpdatedAt, "yyyy年MM月dd日 hh:mm");
                }
                @formattedUpdatedAtDate
            </td>


            <td>
                <!-- モーダルを表示するトリガーボタン -->
                    <button type="button" class="btn btn-primary openEditModal" data-id="@item.Id">
                        編集<i class="bi bi-person-add"></i>
                    </button>
                <a asp-action="Delete" asp-route-id="@item.Id">削除</a>
            </td>
        </tr>
}

    </tbody>
</table>

<!-- モーダルウィンドウ -->
<div class="modal fade" id="externalModal" tabindex="-1" aria-labelledby="externalModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-body" id="modalContentPlaceholder"></div>
        </div>
    </div>
</div>

    <script>
     $(document).ready(function () {
        $('.openEditModal').on('click', function (e) {
            e.preventDefault();
            $('#externalModal').modal('show'); 

            var itemId = $(this).data('id');

            $.ajax({
                url: '/EmployeeLists/Edit/' + itemId,
                type: 'GET',
                success: function (data) {
                    $('#modalContentPlaceholder').html(data);
                }
            });
        });

        // 追加モーダルを表示するボタンがクリックされた場合
        $('#openCreateModal').on('click', function (e) {
            e.preventDefault();
            $('#externalModal').modal('show');

            $.ajax({
                url: '/EmployeeLists/Create',
                type: 'GET',
                success: function (data) {
                    $('#modalContentPlaceholder').html(data);
                }
            });
        });
        $('.modal').on('click', function (e) {
            if (e.target !== this) return; 
            $('#externalModal').modal('hide');
        });
    });



    //Ajax無し
    // document.addEventListener("DOMContentLoaded", function () {
    //     var openEditModalButtons = document.querySelectorAll(".openEditModal");
    //     openEditModalButtons.forEach(function (button) {
    //         button.addEventListener("click", function (event) {
    //             event.preventDefault();
    //             document.getElementById("externalModal").classList.add("show");
    //             document.getElementById("externalModal").style.display = "block";

    //             var itemId = button.dataset.id;

    //             var request = new XMLHttpRequest();
    //             request.onreadystatechange = function () {
    //                 if (request.readyState === 4 && request.status === 200) {
    //                     document.getElementById("modalContentPlaceholder").innerHTML = request.responseText;
    //                 }
    //             };
    //             request.open("GET", "/EmployeeLists/Edit/" + itemId, true);
    //             request.send();
    //         });
    //     });

    //     document.getElementById("openCreateModal").addEventListener("click", function (event) {
    //         event.preventDefault();
    //         document.getElementById("externalModal").classList.add("show");
    //         document.getElementById("externalModal").style.display = "block";

    //         var request = new XMLHttpRequest();
    //         request.onreadystatechange = function () {
    //             if (request.readyState === 4 && request.status === 200) {
    //                 document.getElementById("modalContentPlaceholder").innerHTML = request.responseText;
    //             }
    //         };
    //         request.open("GET", "/EmployeeLists/Create", true);
    //         request.send();
    //     });

    //     document.querySelectorAll(".modal").forEach(function (modal) {
    //         modal.addEventListener("click", function (event) {
    //             if (event.target === modal) {
    //                 modal.classList.remove("show");
    //                 modal.style.display = "none";
    //             }
    //         });
    //     });
    // });
</script>